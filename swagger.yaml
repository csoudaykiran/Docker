openapi: "3.0.0"

info:
  title: Items API with API Key Auth
  version: "1.0"

components:
  securitySchemes:
    JwtTokenAuth:
      type: apiKey                 # Indicates we're using an API key
      in: header                   # The key is passed via HTTP header
      name: x-access-token         # Name of the header
      x-apikeyInfoFunc: security.verify_token  # Function to validate API keys

  schemas:
    ItemInput:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
        price:
          type: number
    Item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number

paths:
  /items:
    get:
      operationId: items.get_items   # Maps to items.py -> get_items()
      security:
        - JwtTokenAuth: []          # Requires a valid API key
      responses:
        "200":
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'

    post:
      operationId: items.add_item    # Maps to items.py -> add_item()
      security:
        - JwtTokenAuth: []          # Requires a valid API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInput'
      responses:
        "201":
          description: Item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  /items/{item_id}:
    get:
      operationId: items.get_item    # Maps to items.py -> get_item()
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - JwtTokenAuth: []
      responses:
        "200":
          description: Item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

    put:
      operationId: items.update_item  # Maps to items.py -> update_item()
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - JwtTokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInput'
      responses:
        "200":
          description: Item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

    delete:
      operationId: items.delete_item  # Maps to items.py -> delete_item()
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - JwtTokenAuth: []
      responses:
        "204":
          description: Item deleted
