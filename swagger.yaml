openapi: "3.0.0"

info:
  title: Items API with JWT Auth and Scopes
  version: "1.0"

components:
  securitySchemes:
    JwtTokenAuth:
      type: http                # HTTP-based security
      scheme: bearer            # Bearer token
      bearerFormat: JWT         # Token format is JWT
      x-bearerInfoFunc: security.decode_token  # Connexion function to decode tokens

  schemas:
    ItemInput:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
        price:
          type: number
    Item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number

paths:
  /items:
    get:
      operationId: items.get_items
      security:
        - JwtTokenAuth: [read]  # Requires read scope
      responses:
        "200":
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'

    post:
      operationId: items.add_item
      security:
        - JwtTokenAuth: [write] # Requires write scope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInput'
      responses:
        "201":
          description: Item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  /items/{item_id}:
    get:
      operationId: items.get_item
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - JwtTokenAuth: [read]
      responses:
        "200":
          description: Item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

    put:
      operationId: items.update_item
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - JwtTokenAuth: [write]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInput'
      responses:
        "200":
          description: Item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

    delete:
      operationId: items.delete_item
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - JwtTokenAuth: [delete]
      responses:
        "204":
          description: Item deleted
  /auth:
    post:
      summary: User login to get JWT token
      operationId: auth.login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Token response
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string